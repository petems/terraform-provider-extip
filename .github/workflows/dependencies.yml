name: Dependencies

on:
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
  push:
    paths:
      - 'go.mod'
      - 'go.sum'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GO_VERSION: '1.24'

jobs:
  update-deps:
    name: Update Dependencies
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    outputs:
      has_updates: ${{ steps.check.outputs.has_updates }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Check for updates
        id: check
        run: |
          # Get current versions
          go list -mod=readonly -m all > current_modules.txt

          # Check for updates
          if go list -mod=readonly -u -m all | grep -E '\[.*\]'; then
            echo "Updates available"
            echo "has_updates=true" >> $GITHUB_OUTPUT
          else
            echo "No updates available"
            echo "has_updates=false" >> $GITHUB_OUTPUT
          fi

      - name: Update dependencies
        if: steps.check.outputs.has_updates == 'true'
        run: |
          go get -u ./...
          go mod tidy
          go mod vendor

      - name: Run tests after update
        if: steps.check.outputs.has_updates == 'true'
        run: |
          make test-short

      - name: Create Pull Request
        if: steps.check.outputs.has_updates == 'true' && github.ref_type == 'branch'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'chore: update dependencies'
          body: |
            ## Dependency Updates

            This PR updates Go dependencies to their latest versions.

            ### Changes
            - Updated Go modules to latest compatible versions
            - Ran `go mod tidy` to clean up dependencies
            - Updated vendor directory
            - Verified tests still pass

            ### Testing
            - [x] Basic tests pass
            - [ ] Full integration tests pass
            - [ ] Security scan passes
          branch: chore/update-dependencies
          delete-branch: true
          base: ${{ github.head_ref || github.ref_name }}

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: update-deps
    if: needs.update-deps.outputs.has_updates == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Cache security tools
        uses: actions/cache@v4
        with:
          path: |
            ~/go/bin/gosec
            ~/go/bin/govulncheck
          key: security-tools-${{ runner.os }}-latest

      - name: Install security tools
        run: |
          if [ ! -f ~/go/bin/gosec ]; then
            go install github.com/securego/gosec/v2/cmd/gosec@latest
          fi
          if [ ! -f ~/go/bin/govulncheck ]; then
            go install golang.org/x/vuln/cmd/govulncheck@latest
          fi
          # Add Go bin to PATH
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Run gosec security scan
        run: |
          gosec -fmt=sarif -out=results.sarif ./...

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: results.sarif

      - name: Run govulncheck
        run: |
          # Ensure govulncheck is available
          export PATH="$HOME/go/bin:$PATH"
          govulncheck ./...

  audit:
    name: Audit Dependencies
    runs-on: ubuntu-latest
    needs: update-deps
    if: needs.update-deps.outputs.has_updates == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Run dependency audit
        run: |
          go list -mod=readonly -m all > deps.txt
          echo "Dependencies listed in deps.txt"
          cat deps.txt

      - name: Check for known vulnerabilities
        run: |
          # Ensure govulncheck is available
          export PATH="$HOME/go/bin:$PATH"
          govulncheck -json ./... > vuln-report.json || true

          # Check for vulnerabilities
          if [ -s vuln-report.json ] && jq -e '.Vulns[]?' vuln-report.json > /dev/null 2>&1; then
            echo "❌ Vulnerabilities found in dependencies!"
            jq '.Vulns[] | {Package: .PkgPath, Vulnerability: .OSV.id, Summary: .OSV.summary}' vuln-report.json
            exit 1
          else
            echo "✅ No known vulnerabilities found in dependencies"
          fi